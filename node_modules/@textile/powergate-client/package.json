{
  "_from": "@textile/powergate-client@^2.0.0",
  "_id": "@textile/powergate-client@2.0.1",
  "_inBundle": false,
  "_integrity": "sha512-6U+CfXjJbZ38Mh3GS+mrWRF45tXt3y6TNSOklS/1eZLzD4qiG/6WCHV+zfz8Gl+JyGsXFDN2MQVzWKzSjSrVsQ==",
  "_location": "/@textile/powergate-client",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "@textile/powergate-client@^2.0.0",
    "name": "@textile/powergate-client",
    "escapedName": "@textile%2fpowergate-client",
    "scope": "@textile",
    "rawSpec": "^2.0.0",
    "saveSpec": null,
    "fetchSpec": "^2.0.0"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/@textile/powergate-client/-/powergate-client-2.0.1.tgz",
  "_shasum": "1cb08098ea344bed8ce226cf211c6bb7fa215776",
  "_spec": "@textile/powergate-client@^2.0.0",
  "_where": "E:\\ShowMarketdata\\backend",
  "author": {
    "name": "Textile",
    "email": "contact@textile.io"
  },
  "bundleDependencies": false,
  "dependencies": {
    "@textile/grpc-powergate-client": "0.6.8",
    "@textile/grpc-transport": "0.0.3",
    "ipfs-http-client": "^47.0.1",
    "it-block": "^2.0.0"
  },
  "deprecated": false,
  "description": "Client for Textile's Powergate",
  "devDependencies": {
    "@commitlint/cli": "^11.0.0",
    "@commitlint/config-conventional": "^11.0.0",
    "@types/chai": "^4.2.12",
    "@types/dirty-chai": "^2.0.2",
    "@types/mocha": "^8.0.3",
    "@types/node": "^14.11.2",
    "@typescript-eslint/eslint-plugin": "^4.3.0",
    "@typescript-eslint/parser": "^4.3.0",
    "chai": "^4.2.0",
    "dirty-chai": "^2.0.1",
    "eslint": "^7.10.0",
    "eslint-config-prettier": "^6.12.0",
    "eslint-plugin-prettier": "^3.1.4",
    "husky": "^4.3.0",
    "json": "^10.0.0",
    "mocha": "^8.1.3",
    "polendina": "^1.1.0",
    "prettier": "^2.1.2",
    "prettier-plugin-organize-imports": "^1.1.1",
    "rimraf": "^3.0.2",
    "touch": "^3.1.0",
    "ts-loader": "^8.0.4",
    "ts-node": "^9.0.0",
    "typedoc": "^0.19.2",
    "typedoc-plugin-markdown": "^3.0.3",
    "typescript": "^4.0.3",
    "typescript-docs-verifier": "^1.1.2",
    "wait-on": "^5.2.0"
  },
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  },
  "keywords": [
    "typescript",
    "library",
    "filecoin",
    "ipfs",
    "textile"
  ],
  "license": "MIT",
  "main": "dist/index",
  "name": "@textile/powergate-client",
  "scripts": {
    "build": "npm run compile",
    "clean": "rimraf ./dist ./tsconfig.tsbuildinfo",
    "compile": "tsc -b tsconfig.json",
    "docs": "npx -p typescript -p typedoc@next typedoc --plugin none --mode library --out docs --excludeNotExported --includeDeclarations --ignoreCompilerErrors src/index.ts",
    "docs:clean": "rm -rf docs",
    "docs:md": "typedoc --plugin typedoc-plugin-markdown",
    "docs:test": "npm run docs:clean && npm run docs:md && npm run docs:verify",
    "docs:verify": "typescript-docs-verifier --input-files=`find docs -type f -name '**.md'`",
    "lint": "eslint --fix --ext .js,.ts src/**/*",
    "localnet:down": "cd powergate-docker && make localnet-down",
    "localnet:up": "cd powergate-docker && make localnet",
    "powergate-docker": "./powergate-docker.sh",
    "prebuild": "npm run clean",
    "prepublishOnly": "npm run build",
    "test": "npm run test:node && npm run test:browser",
    "test:browser": "npm run powergate-docker && polendina --timeout 3000 --cleanup src/**/*.spec.ts --webpack-config ./webpack.test.js",
    "test:node": "npm run powergate-docker && TS_NODE_FILES=true mocha --exit",
    "watch": "tsc --watch"
  },
  "types": "dist/index",
  "version": "2.0.1"
}
