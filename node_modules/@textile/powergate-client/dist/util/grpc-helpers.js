"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTransport = exports.useToken = exports.promise = exports.host = void 0;
const grpc_web_1 = require("@improbable-eng/grpc-web");
const grpc_transport_1 = require("@textile/grpc-transport");
exports.host = "http://0.0.0.0:6002";
const tokenKey = "X-ffs-Token";
function promise(handler, mapper) {
    return new Promise((resolve, reject) => {
        handler((err, resp) => {
            if (err) {
                reject(err);
            }
            if (!resp) {
                reject("empty response");
            }
            else {
                resolve(mapper(resp));
            }
        });
    });
}
exports.promise = promise;
exports.useToken = (initialToken) => {
    let token = initialToken;
    const getMeta = () => {
        const meta = new grpc_web_1.grpc.Metadata();
        if (token) {
            meta.set(tokenKey, token);
        }
        return meta;
    };
    const getHeaders = () => {
        const headers = {};
        if (token) {
            headers["x-ipfs-ffs-auth"] = token;
        }
        return headers;
    };
    const setToken = (t) => {
        token = t;
    };
    return Object.freeze({ getMeta, getHeaders, setToken });
};
exports.getTransport = () => grpc_transport_1.WebsocketTransport();
//# sourceMappingURL=grpc-helpers.js.map