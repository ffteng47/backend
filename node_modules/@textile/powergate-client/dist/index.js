"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createPow = exports.walletTypes = exports.reputationTypes = exports.netTypes = exports.minersTypes = exports.faultsTypes = exports.asksTypes = exports.healthTypes = exports.ffsTypes = void 0;
const rpc_pb_1 = require("@textile/grpc-powergate-client/dist/buildinfo/rpc/rpc_pb");
const rpc_pb_service_1 = require("@textile/grpc-powergate-client/dist/buildinfo/rpc/rpc_pb_service");
const asks_1 = require("./asks");
const faults_1 = require("./faults");
const ffs_1 = require("./ffs");
const health_1 = require("./health");
const miners_1 = require("./miners");
const net_1 = require("./net");
const reputation_1 = require("./reputation");
const util_1 = require("./util");
const wallet_1 = require("./wallet");
exports.ffsTypes = __importStar(require("@textile/grpc-powergate-client/dist/ffs/rpc/rpc_pb"));
exports.healthTypes = __importStar(require("@textile/grpc-powergate-client/dist/health/rpc/rpc_pb"));
exports.asksTypes = __importStar(require("@textile/grpc-powergate-client/dist/index/ask/rpc/rpc_pb"));
exports.faultsTypes = __importStar(require("@textile/grpc-powergate-client/dist/index/faults/rpc/rpc_pb"));
exports.minersTypes = __importStar(require("@textile/grpc-powergate-client/dist/index/miner/rpc/rpc_pb"));
exports.netTypes = __importStar(require("@textile/grpc-powergate-client/dist/net/rpc/rpc_pb"));
exports.reputationTypes = __importStar(require("@textile/grpc-powergate-client/dist/reputation/rpc/rpc_pb"));
exports.walletTypes = __importStar(require("@textile/grpc-powergate-client/dist/wallet/rpc/rpc_pb"));
const defaultConfig = {
    host: util_1.host,
    transport: util_1.getTransport(),
};
/**
 * Creates a new Powergate client
 * @param config A config object that changes the behavior of the client
 * @returns A Powergate client API
 */
exports.createPow = (config) => {
    const c = Object.assign(Object.assign({}, defaultConfig), removeEmpty(config));
    const { getMeta, getHeaders, setToken } = util_1.useToken(c.authToken);
    const buildInfoClient = new rpc_pb_service_1.RPCServiceClient(c.host, c);
    return {
        host: c.host,
        setToken,
        buildInfo: () => util_1.promise((cb) => buildInfoClient.buildInfo(new rpc_pb_1.BuildInfoRequest(), cb), (resp) => resp.toObject()),
        asks: asks_1.createAsks(c),
        faults: faults_1.createFaults(c),
        ffs: ffs_1.createFFS(c, getMeta, getHeaders),
        health: health_1.createHealth(c),
        miners: miners_1.createMiners(c),
        net: net_1.createNet(c),
        reputation: reputation_1.createReputation(c),
        wallet: wallet_1.createWallet(c),
    };
};
// eslint-disable-next-line @typescript-eslint/no-explicit-any
const removeEmpty = (obj) => {
    Object.keys(obj).forEach((key) => {
        if (obj[key] && typeof obj[key] === "object")
            removeEmpty(obj[key]);
        else if (obj[key] === undefined)
            delete obj[key];
    });
    return obj;
};
//# sourceMappingURL=index.js.map