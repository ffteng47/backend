import { ConnectednessResponse, FindPeerResponse, ListenAddrResponse, PeerAddrInfo, PeersResponse } from "@textile/grpc-powergate-client/dist/net/rpc/rpc_pb";
import { Config } from "../types";
export interface Net {
    /**
     * Get the listen address of the filecoin node.
     * @returns The listen address info.
     */
    listenAddr: () => Promise<ListenAddrResponse.AsObject>;
    /**
     * List filecoin peers.
     * @returns A list of filecoin peers.
     */
    peers: () => Promise<PeersResponse.AsObject>;
    /**
     * Find a peer by peer id.
     * @param peerId The peer id to find info for.
     * @returns The peer info.
     */
    findPeer: (peerId: string) => Promise<FindPeerResponse.AsObject>;
    /**
     * Connect to a peer.
     * @param peerInfo The peer info specifying the peer to connect to.
     */
    connectPeer: (peerInfo: PeerAddrInfo.AsObject) => Promise<void>;
    /**
     * Get the current connectedness state to a peer.
     * @param peerId The peer id.
     * @returns Information about the connectedness to the peer.
     */
    connectedness: (peerId: string) => Promise<ConnectednessResponse.AsObject>;
    /**
     * Disconnect from a peer.
     * @param peerId The peer id to disconnect from.
     */
    disconnectPeer: (peerId: string) => Promise<void>;
}
/**
 * @ignore
 */
export declare const createNet: (config: Config) => Net;
